/**
 * Staff Dashboard - Department-specific Overview
 * Role-specific tasks and department-focused information
 */

import React from 'react';
import { Statistic, Table, Progress, Tag, Tabs, List, Badge, Row, Col, Card, Alert } from 'antd';
import { 
  UserOutlined, 
  ShoppingCartOutlined,
  CheckCircleOutlined,
  ClockCircleOutlined,
  FileTextOutlined,
  ToolOutlined,
  AuditOutlined,
  DollarOutlined,
  TrophyOutlined,
  StarOutlined,
  TeamOutlined,
  BarChartOutlined
} from '@ant-design/icons';

import PageTitle from 'components/common/PageTitle';
import { usePermissions } from 'hooks/usePermissions';
import { isMobile } from 'react-device-detect';
import './dashboard-styles.css';

const { TabPane } = Tabs;

const StaffDashboard = () => {
  const { userRole, homeLocation, hasPermission } = usePermissions();
  
  // Determine department based on role and permissions
  const getDepartment = () => {
    if (!userRole) return 'general';
    const role = String(userRole).toLowerCase();
    if (role.includes('sales') || hasPermission('sales.edit')) return 'sales';
    if (role.includes('accounting') || hasPermission('accounting.edit')) return 'accounting';
    if (role.includes('service') || hasPermission('service.edit')) return 'service';
    if (role.includes('inventory') || hasPermission('inventory.edit')) return 'inventory';
    return 'general';
  };

  const department = getDepartment();
  const userBranch = homeLocation?.branch || 'N/A';

  // Department-specific configurations
  const departmentConfig = {
    sales: {
      title: 'üíº ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏ù‡πà‡∏≤‡∏¢‡∏Ç‡∏≤‡∏¢',
      icon: <ShoppingCartOutlined />,
      color: '#1890ff',
      gradient: 'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)',
      tasks: [
        { id: 1, task: '‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà 5 ‡∏£‡∏≤‡∏¢', deadline: '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ', priority: 'high', status: 'pending' },
        { id: 2, task: '‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ñ‡πÅ‡∏ó‡∏£‡∏Å‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤', deadline: '‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ', priority: 'medium', status: 'in_progress' },
        { id: 3, task: '‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢', deadline: '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ', priority: 'high', status: 'completed' },
        { id: 4, task: '‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏ó‡∏µ‡∏°‡∏Ç‡∏≤‡∏¢', deadline: '2 ‡∏ß‡∏±‡∏ô', priority: 'low', status: 'pending' }
      ],
      metrics: {
        monthlyTarget: 500000,
        monthlyActual: 380000,
        customersContacted: 25,
        quotationsSent: 8
      }
    },
    accounting: {
      title: 'üìä ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏±‡∏ç‡∏ä‡∏µ',
      icon: <AuditOutlined />,
      color: '#52c41a',
      gradient: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',
      tasks: [
        { id: 1, task: '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô', deadline: '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ', priority: 'high', status: 'pending' },
        { id: 2, task: '‡∏à‡∏±‡∏î‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô', deadline: '‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ', priority: 'medium', status: 'in_progress' },
        { id: 3, task: '‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ', deadline: '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ', priority: 'high', status: 'completed' },
        { id: 4, task: '‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö', deadline: '3 ‡∏ß‡∏±‡∏ô', priority: 'medium', status: 'pending' }
      ],
      metrics: {
        invoicesProcessed: 45,
        paymentsReceived: 32,
        pendingApprovals: 7,
        monthlyClosing: 85
      }
    },
    service: {
      title: 'üîß ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£',
      icon: <ToolOutlined />,
      color: '#faad14',
      gradient: 'linear-gradient(135deg, #fa709a 0%, #fee140 100%)',
      tasks: [
        { id: 1, task: '‡∏ã‡πà‡∏≠‡∏°‡πÅ‡∏ã‡∏°‡∏£‡∏ñ‡πÅ‡∏ó‡∏£‡∏Å‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ A', deadline: '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ', priority: 'high', status: 'in_progress' },
        { id: 2, task: '‡∏ï‡∏£‡∏ß‡∏à‡πÄ‡∏ä‡πá‡∏Ñ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏Æ‡∏î‡∏£‡∏≠‡∏•‡∏¥‡∏Å', deadline: '‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ', priority: 'medium', status: 'pending' },
        { id: 3, task: '‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤', deadline: '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ', priority: 'high', status: 'completed' },
        { id: 4, task: '‡∏≠‡∏ö‡∏£‡∏°‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏±‡∏Å‡∏£', deadline: '5 ‡∏ß‡∏±‡∏ô', priority: 'low', status: 'pending' }
      ],
      metrics: {
        jobsCompleted: 12,
        jobsInProgress: 5,
        customerSatisfaction: 96.5,
        partsSold: 28
      }
    },
    inventory: {
      title: 'üì¶ ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏ù‡πà‡∏≤‡∏¢‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
      icon: <FileTextOutlined />,
      color: '#722ed1',
      gradient: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
      tasks: [
        { id: 1, task: '‡∏ï‡∏£‡∏ß‡∏à‡∏ô‡∏±‡∏ö‡∏™‡∏ï‡πä‡∏≠‡∏Å‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà', deadline: '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ', priority: 'high', status: 'pending' },
        { id: 2, task: '‡∏à‡∏±‡∏î‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤', deadline: '‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ', priority: 'medium', status: 'in_progress' },
        { id: 3, task: '‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö', deadline: '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ', priority: 'medium', status: 'completed' },
        { id: 4, task: '‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏à‡∏±‡∏î‡∏ã‡∏∑‡πâ‡∏≠', deadline: '2 ‡∏ß‡∏±‡∏ô', priority: 'low', status: 'pending' }
      ],
      metrics: {
        itemsManaged: 1250,
        stockTurns: 8.5,
        lowStockItems: 15,
        ordersProcessed: 38
      }
    },
    general: {
      title: 'üìã ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ',
      icon: <UserOutlined />,
      color: '#eb2f96',
      gradient: 'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)',
      tasks: [
        { id: 1, task: '‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö', deadline: '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ', priority: 'medium', status: 'pending' },
        { id: 2, task: '‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏ó‡∏µ‡∏°', deadline: '‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ', priority: 'high', status: 'pending' },
        { id: 3, task: '‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤', deadline: '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ', priority: 'medium', status: 'completed' },
        { id: 4, task: '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏£‡∏∞‡∏ö‡∏ö', deadline: '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ', priority: 'low', status: 'pending' }
      ],
      metrics: {
        tasksCompleted: 1,
        meetingsAttended: 12,
        reportsSubmitted: 8,
        efficiency: 87.5
      }
    }
  };

  const config = departmentConfig[department];
  
  // Calculate personal metrics
  const personalMetrics = {
    todayTasks: config.tasks.filter(t => t.deadline === '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ').length,
    completedTasks: config.tasks.filter(t => t.status === 'completed').length,
    pendingTasks: config.tasks.filter(t => t.status === 'pending').length,
    inProgressTasks: config.tasks.filter(t => t.status === 'in_progress').length
  };

  const taskColumns = [
    {
      title: '‡∏á‡∏≤‡∏ô',
      dataIndex: 'task',
      key: 'task',
      width: 250,
    },
    {
      title: '‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡πà‡∏á',
      dataIndex: 'deadline',
      key: 'deadline',
      width: 120,
    },
    {
      title: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç',
      dataIndex: 'priority',
      key: 'priority',
      width: 120,
      render: (priority) => {
        const colors = { high: 'red', medium: 'orange', low: 'blue' };
        const texts = { high: '‡∏™‡∏π‡∏á', medium: '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á', low: '‡∏ï‡πà‡∏≥' };
        return <Tag color={colors[priority]}>{texts[priority]}</Tag>;
      }
    },
    {
      title: '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞',
      dataIndex: 'status',
      key: 'status',
      width: 120,
      render: (status) => {
        const config = {
          completed: { color: 'green', text: '‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß' },
          in_progress: { color: 'blue', text: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥' },
          pending: { color: 'orange', text: '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£' }
        };
        return (
          <Tag color={config[status]?.color}>
            {config[status]?.text}
          </Tag>
        );
      }
    }
  ];

  return (
    <div className="main-content-container px-4" style={{ width: '100%', padding: '0 16px' }}>
      {/* Page Header */}
      <Row className="page-header py-4" gutter={0}>
        <Col span={24}>
          <PageTitle 
            title={`${config.title} - ‡∏™‡∏≤‡∏Ç‡∏≤: ${userBranch}`}
            subtitle={`${userRole || 'Staff'} Dashboard`}
            className="text-sm-left mb-3" 
          />
        </Col>
      </Row>

      {/* Enhanced Personal Task Metrics with Beautiful Gradient Cards */}
      <Row gutter={[16, 16]} className="mb-4 dashboard-metrics-row">
        <Col xs={24} sm={12} md={6} lg={6} xl={6}>
          <Card className="gradient-card card-1 text-center" style={{ background: config.gradient, color: 'white' }}>
            <Statistic
              title={<span style={{ color: 'white', fontSize: '18px' }}>‡∏á‡∏≤‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ</span>}
              value={personalMetrics.todayTasks}
              prefix={<ClockCircleOutlined style={{ color: 'white' }} className="interactive-icon" />}
              valueStyle={{ color: 'white', fontSize: '2.5rem', fontWeight: 'bold' }}
              className="metric-number"
            />
          </Card>
        </Col>
        <Col xs={24} sm={12} md={6} lg={6} xl={6}>
          <Card className="gradient-card-pink card-2 text-center" style={{ background: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)', color: 'white' }}>
            <Statistic
              title={<span style={{ color: 'white', fontSize: '18px' }}>‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß</span>}
              value={personalMetrics.completedTasks}
              prefix={<CheckCircleOutlined style={{ color: 'white' }} className="interactive-icon" />}
              valueStyle={{ color: 'white', fontSize: '2.5rem', fontWeight: 'bold' }}
              className="metric-number"
            />
          </Card>
        </Col>
        <Col xs={24} sm={12} md={6} lg={6} xl={6}>
          <Card className="gradient-card-blue card-3 text-center" style={{ background: 'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)', color: 'white' }}>
            <Statistic
              title={<span style={{ color: 'white', fontSize: '18px' }}>‡∏á‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß</span>}
              value={personalMetrics.pendingTasks}
              prefix={<FileTextOutlined style={{ color: 'white' }} className="interactive-icon" />}
              valueStyle={{ color: 'white', fontSize: '2.5rem', fontWeight: 'bold' }}
              className="metric-number"
            />
          </Card>
        </Col>
        <Col xs={24} sm={12} md={6} lg={6} xl={6}>
          <Card className="gradient-card-orange card-4 text-center" style={{ background: 'linear-gradient(135deg, #fa709a 0%, #fee140 100%)', color: 'white' }}>
            <Statistic
              title={<span style={{ color: 'white', fontSize: '18px' }}>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥</span>}
              value={personalMetrics.inProgressTasks}
              prefix={<BarChartOutlined style={{ color: 'white' }} className="interactive-icon" />}
              valueStyle={{ color: 'white', fontSize: '2.5rem', fontWeight: 'bold' }}
              className="metric-number"
            />
          </Card>
        </Col>
      </Row>

      {/* Department-specific Secondary Metrics */}
      <Row gutter={[16, 16]} className="mb-4 dashboard-metrics-row">
        {department === 'sales' && (
          <>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-5 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≤‡∏¢</span>}
                  value={config.metrics.monthlyTarget}
                  precision={0}
                  suffix=" ‡∏ø"
                  prefix={<DollarOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#1890ff' }}
                  className="metric-number"
                />
              </Card>
            </Col>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-6 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏à‡∏£‡∏¥‡∏á</span>}
                  value={config.metrics.monthlyActual}
                  precision={0}
                  suffix=" ‡∏ø"
                  prefix={<TrophyOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#52c41a' }}
                  className="metric-number"
                />
              </Card>
            </Col>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-7 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠</span>}
                  value={config.metrics.customersContacted}
                  suffix=" ‡∏£‡∏≤‡∏¢"
                  prefix={<TeamOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#722ed1' }}
                  className="metric-number"
                />
              </Card>
            </Col>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-8 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤</span>}
                  value={config.metrics.quotationsSent}
                  suffix=" ‡∏â‡∏ö‡∏±‡∏ö"
                  prefix={<FileTextOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#fa8c16' }}
                  className="metric-number"
                />
              </Card>
            </Col>
          </>
        )}
        
        {department === 'accounting' && (
          <>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-5 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡πÉ‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏´‡∏ô‡∏µ‡πâ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•</span>}
                  value={config.metrics.invoicesProcessed}
                  suffix=" ‡πÉ‡∏ö"
                  prefix={<FileTextOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#52c41a' }}
                  className="metric-number"
                />
              </Card>
            </Col>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-6 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</span>}
                  value={config.metrics.paymentsReceived}
                  suffix=" ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"
                  prefix={<DollarOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#1890ff' }}
                  className="metric-number"
                />
              </Card>
            </Col>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-7 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</span>}
                  value={config.metrics.pendingApprovals}
                  suffix=" ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"
                  prefix={<ClockCircleOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#fa8c16' }}
                  className="metric-number"
                />
              </Card>
            </Col>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-8 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡∏õ‡∏¥‡∏î‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</span>}
                  value={config.metrics.monthlyClosing}
                  suffix="%"
                  prefix={<CheckCircleOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#52c41a' }}
                  className="metric-number"
                />
              </Card>
            </Col>
          </>
        )}

        {department === 'service' && (
          <>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-5 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏™‡∏£‡πá‡∏à</span>}
                  value={config.metrics.jobsCompleted}
                  suffix=" ‡∏á‡∏≤‡∏ô"
                  prefix={<CheckCircleOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#52c41a' }}
                  className="metric-number"
                />
              </Card>
            </Col>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-6 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</span>}
                  value={config.metrics.jobsInProgress}
                  suffix=" ‡∏á‡∏≤‡∏ô"
                  prefix={<ToolOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#1890ff' }}
                  className="metric-number"
                />
              </Card>
            </Col>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-7 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à</span>}
                  value={config.metrics.customerSatisfaction}
                  precision={1}
                  suffix="%"
                  prefix={<StarOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#eb2f96' }}
                  className="metric-number"
                />
              </Card>
            </Col>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-8 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà‡∏Ç‡∏≤‡∏¢</span>}
                  value={config.metrics.partsSold}
                  suffix=" ‡∏ä‡∏¥‡πâ‡∏ô"
                  prefix={<FileTextOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#fa8c16' }}
                  className="metric-number"
                />
              </Card>
            </Col>
          </>
        )}

        {department === 'inventory' && (
          <>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-5 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</span>}
                  value={config.metrics.itemsManaged}
                  suffix=" ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"
                  prefix={<FileTextOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#722ed1' }}
                  className="metric-number"
                />
              </Card>
            </Col>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-6 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡∏´‡∏°‡∏∏‡∏ô‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏™‡∏ï‡πä‡∏≠‡∏Å</span>}
                  value={config.metrics.stockTurns}
                  precision={1}
                  suffix=" ‡∏Ñ‡∏£‡∏±‡πâ‡∏á"
                  prefix={<BarChartOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#52c41a' }}
                  className="metric-number"
                />
              </Card>
            </Col>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-7 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ô‡πâ‡∏≠‡∏¢</span>}
                  value={config.metrics.lowStockItems}
                  suffix=" ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"
                  prefix={<ClockCircleOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#fa8c16' }}
                  className="metric-number"
                />
              </Card>
            </Col>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-8 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•</span>}
                  value={config.metrics.ordersProcessed}
                  suffix=" ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"
                  prefix={<CheckCircleOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#1890ff' }}
                  className="metric-number"
                />
              </Card>
            </Col>
          </>
        )}

        {department === 'general' && (
          <>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-5 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß</span>}
                  value={config.metrics.tasksCompleted}
                  suffix=" ‡∏á‡∏≤‡∏ô"
                  prefix={<CheckCircleOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#52c41a' }}
                  className="metric-number"
                />
              </Card>
            </Col>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-6 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°</span>}
                  value={config.metrics.meetingsAttended}
                  suffix=" ‡∏Ñ‡∏£‡∏±‡πâ‡∏á"
                  prefix={<TeamOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#1890ff' }}
                  className="metric-number"
                />
              </Card>
            </Col>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-7 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡πà‡∏á</span>}
                  value={config.metrics.reportsSubmitted}
                  suffix=" ‡∏â‡∏ö‡∏±‡∏ö"
                  prefix={<FileTextOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#722ed1' }}
                  className="metric-number"
                />
              </Card>
            </Col>
            <Col xs={24} sm={12} md={6} lg={6} xl={6}>
              <Card className="enhanced-card card-8 text-center">
                <Statistic
                  title={<span style={{ fontSize: '16px' }}>‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û</span>}
                  value={config.metrics.efficiency}
                  precision={1}
                  suffix="%"
                  prefix={<TrophyOutlined className="interactive-icon" />}
                  valueStyle={{ color: '#fa8c16' }}
                  className="metric-number"
                />
              </Card>
            </Col>
          </>
        )}
      </Row>

      {/* Progress Alert */}
      <Row className="mb-4" gutter={[16, 16]}>
        <Col xs={24}>
          <Alert
            className="enhanced-alert"
            message={
              <div className="d-flex justify-content-between align-items-center">
                <span className="font-weight-bold">
                  <span role="img" aria-label="target">üìã</span> ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
                </span>
              </div>
            }
            description={
              <div className="pt-3">
                <Row gutter={[16, 16]}>
                  <Col xs={24} md={16}>
                    <Progress 
                      percent={Math.round((personalMetrics.completedTasks / (personalMetrics.completedTasks + personalMetrics.pendingTasks + personalMetrics.inProgressTasks)) * 100)}
                      strokeColor={{
                        '0%': '#108ee9',
                        '100%': '#87d068',
                      }}
                      strokeWidth={15}
                      format={percent => `${percent}%`}
                      className="enhanced-progress"
                    />
                    <div className="mt-2 d-flex justify-content-between">
                      <small>‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß: <strong>{personalMetrics.completedTasks}</strong></small>
                      <small>‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: <strong>{personalMetrics.completedTasks + personalMetrics.pendingTasks + personalMetrics.inProgressTasks}</strong></small>
                    </div>
                  </Col>
                  <Col xs={24} md={8}>
                    <div className="text-center">
                      <div className="mb-2">
                        <Badge 
                          count={`${Math.round((personalMetrics.completedTasks / (personalMetrics.completedTasks + personalMetrics.pendingTasks + personalMetrics.inProgressTasks)) * 100)}%`}
                          className="enhanced-badge notification"
                          style={{ 
                            backgroundColor: '#52c41a', 
                            fontSize: '16px',
                            padding: '0 12px',
                            height: 'auto',
                            lineHeight: '22px'
                          }}
                        />
                      </div>
                      <small className="text-muted">
                        ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ <strong>{personalMetrics.pendingTasks + personalMetrics.inProgressTasks}</strong> ‡∏á‡∏≤‡∏ô<br/>
                        ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏™‡∏£‡πá‡∏à
                      </small>
                    </div>
                  </Col>
                </Row>
              </div>
            }
            type="info"
            showIcon
          />
        </Col>
      </Row>

      {/* Enhanced Tabs */}
      <Row gutter={[16, 16]}>
        <Col xs={24}>
          <Card className="enhanced-card fade-in-up" style={{ padding: isMobile ? '0px' : '16px' }}>
            <Tabs defaultActiveKey="tasks" className="enhanced-tabs">
              <TabPane tab={<span><span role="img" aria-label="task">üìã</span> ‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</span>} key="tasks">
                <div className="table-overflow-wrapper">
                  <Table
                    columns={taskColumns}
                    dataSource={config.tasks}
                    pagination={false}
                    size="middle"
                    rowKey="id"
                    scroll={{ x: 800 }}
                    className="enhanced-table"
                  />
                </div>
              </TabPane>
              <TabPane tab={<span><span role="img" aria-label="performance">üìä</span> ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û</span>} key="performance">
                <div className="text-center py-5">
                  <h5>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏á‡∏≤‡∏ô</h5>
                  <p>‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</p>
                  <Row gutter={[16, 16]} className="mt-4">
                    <Col xs={24} md={12}>
                      <div className="text-center">
                        <h6>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</h6>
                        <Progress 
                          type="circle" 
                          percent={Math.round((personalMetrics.completedTasks / config.tasks.length) * 100)}
                          strokeColor={{
                            '0%': '#108ee9',
                            '100%': '#87d068',
                          }}
                          className="enhanced-progress"
                        />
                      </div>
                    </Col>
                    <Col xs={24} md={12}>
                      <div className="text-center">
                        <h6>‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°</h6>
                        <List
                          size="small"
                          dataSource={config.tasks.filter(task => task.status === 'pending')}
                          renderItem={task => (
                            <List.Item>
                              <Badge status="warning" text={task.task} />
                            </List.Item>
                          )}
                        />
                      </div>
                    </Col>
                  </Row>
                </div>
              </TabPane>
              <TabPane tab={<span><span role="img" aria-label="help">‚ùì</span> ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠</span>} key="help">
                <div className="text-center py-5">
                  <h5>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á</h5>
                  <p>‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ù‡πà‡∏≤‡∏¢‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô</p>
                  <div className="d-flex justify-content-center">
                    <a href="/help/manual" className="btn btn-outline-primary mr-2 animated-button">
                      üìñ ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
                    </a>
                    <a href="/help/contact" className="btn btn-outline-success mr-2 animated-button">
                      üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ù‡πà‡∏≤‡∏¢‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô
                    </a>
                    <a href="/help/training" className="btn btn-outline-info animated-button">
                      üéì ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏ù‡∏∂‡∏Å‡∏≠‡∏ö‡∏£‡∏°
                    </a>
                  </div>
                </div>
              </TabPane>
            </Tabs>
          </Card>
        </Col>
      </Row>
    </div>
  );
};

export default StaffDashboard; 