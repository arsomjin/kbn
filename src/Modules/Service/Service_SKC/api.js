import moment from 'moment';
import React from 'react';
import { Row, Col } from 'shards-react';
import { Form } from 'antd';
import { DatePicker } from 'elements';
import BranchSelector from 'components/BranchSelector';
import numeral from 'numeral';
import { Numb, roundToNearest5, sortArr } from 'functions';
import Tag from 'antd/es/tag';
import { ListItem } from 'elements';

export const initSearchValue = {
  startDate: moment().format('YYYY-MM-DD'),
  endDate: moment().format('YYYY-MM-DD'),
  branchCode: null
};

const currencyProps = {
  align: 'right',
  render: text => <div className={!text ? 'transparent' : ''}>{text ? numeral(text).format('0,0.00') : '-'}</div>,
  width: 120
};

export const columns = [
  {
    title: '#',
    dataIndex: 'id',
    align: 'center'
  },
  {
    title: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà',
    dataIndex: 'docDate'
  },
  {
    title: '‡∏™‡∏≤‡∏Ç‡∏≤',
    dataIndex: 'branchCode',
    width: 120
  },
  {
    title: '‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£',
    dataIndex: 'orderNo'
  },
  {
    title: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤',
    dataIndex: 'customerName'
  },
  {
    title: '‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥',
    dataIndex: 'orderTypeDesc'
  },
  {
    title: '‡∏£‡∏∏‡πà‡∏ô‡∏£‡∏ñ',
    dataIndex: 'model'
  },
  {
    title: '‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏á',
    dataIndex: 'wages',
    ...currencyProps
  },
  {
    title: '‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á',
    dataIndex: 'freights',
    ...currencyProps
  },
  {
    title: '‡∏≠‡∏∑‡πà‡∏ô‡πÜ',
    dataIndex: 'others',
    ...currencyProps
  },
  {
    title: '‡∏Ñ‡πà‡∏≤‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà',
    children: [
      {
        title: '‡∏¢‡∏≠‡∏î‡πÄ‡∏ï‡πá‡∏°',
        dataIndex: 'partBeforeDiscount',
        key: 1,
        ...currencyProps
      },
      {
        title: '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î SKC',
        dataIndex: 'partSKCDiscount',
        key: 2,
        ...currencyProps
      },
      {
        title: '‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠',
        dataIndex: 'parts',
        key: 3,
        ...currencyProps
      }
    ]
  },
  {
    title: '‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô',
    children: [
      {
        title: '‡∏¢‡∏≠‡∏î‡πÄ‡∏ï‡πá‡∏°',
        dataIndex: 'oilBeforeDiscount',
        key: 1,
        ...currencyProps
      },
      {
        title: '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î SKC',
        dataIndex: 'oilSKCDiscount',
        key: 2,
        ...currencyProps
      },
      {
        title: '‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠',
        dataIndex: 'oils',
        key: 3,
        ...currencyProps
      }
    ]
  },
  {
    title: '‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°',
    dataIndex: 'netPrice'
  },
  // {
  //   title: '‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á',
  //   dataIndex: 'oilSum',
  //   width: 220,
  //   render: (tags) => (
  //     <span>
  //       {tags.map((tag) => {
  //         let color = tag.description.includes('CF4') ? 'geekblue' : 'green';
  //         if (tag.description.includes('18 ‡∏•‡∏¥‡∏ï‡∏£')) {
  //           color = 'volcano';
  //         }
  //         return (
  //           <Tag color={color} key={tag.description}>
  //             {`${tag.description.toUpperCase()} x ${tag.qty}`}
  //           </Tag>
  //         );
  //       })}
  //     </span>
  //   ),
  // },
  {
    title: '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î (%)',
    dataIndex: 'percentDiscount',
    align: 'right',
    render: text => (
      <div className={!text ? 'transparent' : ''}>
        {text && Numb(text) > 0 && Numb(text) < 50 ? `${roundToNearest5(text)}%` : '-'}
      </div>
    ),
    width: 80
  }
];

export const expandedRowRender = record => {
  // showLog({ record });
  return (
    <div className="bg-light bordered pb-1">
      <ListItem label="‡∏£‡∏ñ" info={record.productName} />
      <ListItem label="‡πÄ‡∏•‡∏Ç‡∏£‡∏ñ" info={record.vehicleNo} />
      {record.oilSum && record.oilSum.length > 0 && (
        <ListItem
          label="‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á, ‡πÑ‡∏Æ‡∏î‡∏£‡∏≠‡∏•‡∏¥‡∏Ñ"
          info={sortArr(record.oilSum, ['description']).map(tag => {
            let color = tag.description.includes('CF4') ? 'geekblue' : 'green';
            if (tag.description.includes('18 ‡∏•‡∏¥‡∏ï‡∏£')) {
              color = 'volcano';
            }
            return (
              <Tag color={color} key={tag.description}>
                {`${tag.description.toUpperCase()} x ${tag.qty}`}
              </Tag>
            );
          })}
        />
      )}
      <ListItem
        label="‡∏ä‡πà‡∏≤‡∏á‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£"
        info={
          record.serviceTechnician && record.serviceTechnician.length > 0
            ? record.serviceTechnician.map((tag, n) => {
                // let color = n % 2 === 0 ? 'geekblue' : 'green';
                return (
                  <Tag color={'blue'} key={tag}>
                    {tag}
                  </Tag>
                );
              })
            : '-'
        }
      />
      <ListItem label="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏¥‡∏î‡∏á‡∏≤‡∏ô" info={moment(record.jobCloseDate, 'YYYY-MM-DD').format('D/MM/YYYY')} />
      <ListItem
        label="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞"
        info={record.serviceStatus}
        isTag
        color={record.serviceStatus === '‡∏õ‡∏¥‡∏î‡∏á‡∏≤‡∏ô‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå' ? 'green' : 'orange'}
      />
    </div>
  );
};

export const renderHeader = () => (
  <div className="bg-white pt-3 px-4 border-bottom">
    {/* <Row>
      <Col md="4">
        <Form.Item name="saleNo" label="üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤">
          <DocSelector
            collection="sections/sales/vehicles"
            orderBy={['saleNo', 'firstName']}
            wheres={[['saleType', '==', saleType]]}
            size="small"
            hasAll
            hasKeywords
          />
        </Form.Item>
      </Col> */}
    <Row>
      <Col md="2">
        <Form.Item name="startDate" label="üîç  ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà">
          <DatePicker placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà" />
        </Form.Item>
      </Col>
      <Col md="2">
        <Form.Item name="endDate" label="‡∏ñ‡∏∂‡∏á ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà">
          <DatePicker placeholder="‡∏ñ‡∏∂‡∏á ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà" />
        </Form.Item>
      </Col>
      <Col md="4">
        <Form.Item name="branchCode" label="üîç  ‡∏™‡∏≤‡∏Ç‡∏≤">
          <BranchSelector placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å ‡∏™‡∏≤‡∏Ç‡∏≤" hasAll />
        </Form.Item>
      </Col>
    </Row>
  </div>
);

export const getTitleFromPath = path => {
  switch (path) {
    case '/service-data-skc':
      return '‡πÉ‡∏ô‡∏®‡∏π‡∏ô‡∏¢‡πå';
    case '/service-input':
      return '‡∏ô‡∏≠‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà';

    default:
      return '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ';
  }
};
