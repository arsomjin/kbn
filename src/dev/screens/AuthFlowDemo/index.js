import React, { useState } from 'react';
import { Button, Space, Card, Typography, Divider } from 'antd';
import { useDispatch, useSelector } from 'react-redux';

const { Title, Text } = Typography;

const AuthFlowDemo = () => {
  const dispatch = useDispatch();
  const authState = useSelector(state => state.auth);
  const [demoStage, setDemoStage] = useState('idle');

  // Mock auth actions to test EventEmitter
  const simulateSignIn = () => {
    // Mock LOGIN_REQUEST
    dispatch({ type: 'LOGIN_REQUEST' });
    
    setTimeout(() => {
      // Mock successful auth after delay
      dispatch({ 
        type: 'LOGIN_SUCCESS', 
        user: { 
          uid: 'demo-user',
          email: 'demo@kbn.com'
        }
      });
      
      // Simulate profile loading delay
      setTimeout(() => {
        dispatch({
          type: 'USER_UPDATE',
          user: {
            uid: 'demo-user',
            email: 'demo@kbn.com',
            displayName: 'Demo User',
            branchCode: '0450',
            province: 'р╕Щр╕Др╕гр╕гр╕▓р╕Кр╕кр╕╡р╕бр╕▓'
          }
        });
      }, 1000);
    }, 2000);
  };

  const simulateSignInError = () => {
    dispatch({ type: 'LOGIN_REQUEST' });
    
    setTimeout(() => {
      dispatch({ 
        type: 'LOGIN_FAILURE', 
        error: 'р╕нр╕╡р╣Ар╕бр╕ер╕лр╕гр╕╖р╕нр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З' 
      });
    }, 1500);
  };

  const simulateSignUp = () => {
    dispatch({ type: 'SIGNUP_REQUEST' });
    
    setTimeout(() => {
      dispatch({
        type: 'REGISTRATION_PENDING',
        userData: {
          email: 'newuser@kbn.com',
          displayName: 'New User',
          status: 'pending_approval'
        }
      });
    }, 2000);
  };

  const clearAuthState = () => {
    dispatch({ type: 'LOGOUT_SUCCESS' });
    dispatch({ type: 'CLEAR_REGISTRATION_PENDING' });
  };

  const simulateVerification = () => {
    dispatch({ type: 'VERIFY_REQUEST' });
    
    setTimeout(() => {
      dispatch({ type: 'VERIFY_SUCCESS' });
    }, 1500);
  };

  return (
    <div style={{ padding: '24px', maxWidth: '800px', margin: '0 auto' }}>
      <Title level={2}>ЁЯОн Enhanced EventEmitter - Auth Flow Demo</Title>
      
      <Text type="secondary">
        р╕Чр╕Фр╕кр╕нр╕Ъ Enhanced EventEmitter р╕Чр╕╡р╣Ир╕Ыр╕гр╕▒р╕Ър╕Ыр╕гр╕╕р╕Зр╣Бр╕ер╣Йр╕зр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Ир╕▒р╕Фр╕Бр╕▓р╕г UX р╕гр╕░р╕лр╕зр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ
      </Text>

      <Divider />

      <Card title="ЁЯФН Current Auth State" style={{ marginBottom: '24px' }}>
        <pre style={{ 
          background: '#f5f5f5', 
          padding: '12px', 
          borderRadius: '4px',
          fontSize: '12px',
          overflow: 'auto'
        }}>
          {JSON.stringify(authState, null, 2)}
        </pre>
      </Card>

      <Card title="ЁЯОм Demo Actions">
        <Space direction="vertical" size="middle" style={{ width: '100%' }}>
          
          <div>
            <Title level={4}>тЬЕ Successful Sign In Flow</Title>
            <Text type="secondary" style={{ display: 'block', marginBottom: '8px' }}>
              р╕Ир╕│р╕ер╕нр╕Зр╕Бр╕▓р╕гр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╕кр╕│р╣Ар╕гр╣Зр╕И: р╕Бр╕│р╕ер╕▒р╕Зр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ тЖТ р╣Вр╕лр╕ер╕Фр╣Вр╕Ыр╕гр╣Др╕Яр╕ер╣М тЖТ р╣Ар╕Хр╕гр╕╡р╕вр╕бр╕гр╕░р╕Ър╕Ъ тЖТ р╕кр╕│р╣Ар╕гр╣Зр╕И
            </Text>
            <Button 
              type="primary" 
              onClick={simulateSignIn}
              loading={authState.isLoggingIn}
            >
              р╕Ир╕│р╕ер╕нр╕Зр╕Бр╕▓р╕гр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╕кр╕│р╣Ар╕гр╣Зр╕И
            </Button>
          </div>

          <div>
            <Title level={4}>тЭМ Failed Sign In</Title>
            <Text type="secondary" style={{ display: 'block', marginBottom: '8px' }}>
              р╕Ир╕│р╕ер╕нр╕Зр╕Бр╕▓р╕гр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╕ер╣Йр╕бр╣Ар╕лр╕ер╕з: р╕Бр╕│р╕ер╕▒р╕Зр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ тЖТ р╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф
            </Text>
            <Button 
              danger 
              onClick={simulateSignInError}
              loading={authState.isLoggingIn}
            >
              р╕Ир╕│р╕ер╕нр╕Зр╕Бр╕▓р╕гр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╕ер╣Йр╕бр╣Ар╕лр╕ер╕з
            </Button>
          </div>

          <div>
            <Title level={4}>ЁЯУЭ Registration Flow</Title>
            <Text type="secondary" style={{ display: 'block', marginBottom: '8px' }}>
              р╕Ир╕│р╕ер╕нр╕Зр╕Бр╕▓р╕гр╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щ: р╕Бр╕│р╕ер╕▒р╕Зр╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щ тЖТ р╕гр╕нр╕Бр╕▓р╕гр╕нр╕Щр╕╕р╕бр╕▒р╕Хр╕┤
            </Text>
            <Button 
              type="default" 
              onClick={simulateSignUp}
              loading={authState.isLoggingIn}
            >
              р╕Ир╕│р╕ер╕нр╕Зр╕Бр╕▓р╕гр╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щ
            </Button>
          </div>

          <div>
            <Title level={4}>ЁЯФН Verification Flow</Title>
            <Text type="secondary" style={{ display: 'block', marginBottom: '8px' }}>
              р╕Ир╕│р╕ер╕нр╕Зр╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕е
            </Text>
            <Button 
              type="default" 
              onClick={simulateVerification}
              loading={authState.isVerifying}
            >
              р╕Ир╕│р╕ер╕нр╕Зр╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ
            </Button>
          </div>

          <Divider />

          <div>
            <Title level={4}>ЁЯз╣ Reset State</Title>
            <Text type="secondary" style={{ display: 'block', marginBottom: '8px' }}>
              р╣Ар╕Др╕ер╕╡р╕вр╕гр╣Мр╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╣Ар╕Юр╕╖р╣Ир╕нр╕Чр╕Фр╕кр╕нр╕Ър╣Гр╕лр╕бр╣И
            </Text>
            <Button onClick={clearAuthState}>
              р╣Ар╕Др╕ер╕╡р╕вр╕гр╣Мр╕кр╕Цр╕▓р╕Щр╕░
            </Button>
          </div>

        </Space>
      </Card>

      <Card title="ЁЯУЛ Enhanced Features" style={{ marginTop: '24px' }}>
        <ul>
          <li>ЁЯОп <strong>Smart Stage Detection</strong> - р╕Хр╕гр╕зр╕Ир╕Ир╕▒р╕Ър╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤</li>
          <li>ЁЯОи <strong>Beautiful Loading Overlays</strong> - р╕лр╕Щр╣Йр╕▓р╕Ир╕нр╣Вр╕лр╕ер╕Фр╕Чр╕╡р╣Ир╕кр╕зр╕вр╕Зр╕▓р╕бр╣Бр╕ер╕░р╕Кр╕▒р╕Фр╣Ар╕Ир╕Щ</li>
          <li>тЪб <strong>Smooth Transitions</strong> - р╕Бр╕▓р╕гр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╕лр╕Щр╣Йр╕▓р╕Ир╕нр╕нр╕вр╣Ир╕▓р╕Зр╕Щр╕╕р╣Ир╕бр╕Щр╕зр╕е</li>
          <li>ЁЯМР <strong>Thai Language Support</strong> - р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕ар╕▓р╕йр╕▓р╣Др╕Чр╕вр╕Чр╕╡р╣Ир╣Ар╕лр╕бр╕▓р╕░р╕кр╕б</li>
          <li>ЁЯФФ <strong>Smart Notifications</strong> - р╕Бр╕▓р╕гр╣Бр╕Ир╣Йр╕Зр╣Ар╕Хр╕╖р╕нр╕Щр╕Чр╕╡р╣Ир╣Ар╕лр╕бр╕▓р╕░р╕кр╕бр╕Бр╕▒р╕Ър╣Бр╕Хр╣Ир╕ер╕░р╕кр╕Цр╕▓р╕Щр╕Бр╕▓р╕гр╕Ур╣М</li>
          <li>ЁЯЫбя╕П <strong>Error Handling</strong> - р╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╕нр╕вр╣Ир╕▓р╕Зр╕кр╕Зр╣Ир╕▓р╕Зр╕▓р╕б</li>
        </ul>
      </Card>

      <Card title="ЁЯТб Usage Instructions" style={{ marginTop: '24px' }}>
        <Text>
          Enhanced EventEmitter р╕Ир╕░р╕Чр╕│р╕Зр╕▓р╕Щр╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤р╣Ар╕бр╕╖р╣Ир╕нр╕бр╕╡р╕Бр╕▓р╕гр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╣Бр╕Ыр╕ер╕Зр╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ:
        </Text>
        <ol style={{ marginTop: '12px' }}>
          <li>р╣Др╕бр╣Ир╕Хр╣Йр╕нр╕Зр╣Ар╕гр╕╡р╕вр╕Бр╣Гр╕Кр╣Й manual - р╕Чр╕│р╕Зр╕▓р╕Щр╕Ьр╣Ир╕▓р╕Щ Redux state</li>
          <li>р╕Ыр╕гр╕▒р╕Ър╣Бр╕Хр╣Ир╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Др╕Фр╣Йр╕Хр╕▓р╕бр╣Бр╕Хр╣Ир╕ер╕░р╕Вр╕▒р╣Йр╕Щр╕Хр╕нр╕Щ</li>
          <li>р╕гр╕нр╕Зр╕гр╕▒р╕Ър╕лр╕ер╕▓р╕вр╕кр╕Цр╕▓р╕Щр╕Бр╕▓р╕гр╕Ур╣М: р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ, р╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щ, р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ</li>
          <li>р╣Бр╕кр╕Фр╕Зр╕Ьр╕ер╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╕кр╕│р╣Ар╕гр╣Зр╕Ир╕нр╕вр╣Ир╕▓р╕Зр╣Ар╕лр╕бр╕▓р╕░р╕кр╕б</li>
        </ol>
      </Card>
    </div>
  );
};

export default AuthFlowDemo; 