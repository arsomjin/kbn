import React, { useState } from 'react';
import { 
  Card, 
  Form, 
  Input, 
  Button, 
  Space, 
  Typography, 
  Row, 
  Col, 
  Switch,
  message,
  Divider,
  Select,
  InputNumber,
  Tabs
} from 'antd';
import { 
  SaveOutlined, 
  EditOutlined, 
  CheckOutlined,
  DeleteOutlined
} from '@ant-design/icons';
import PropTypes from 'prop-types';

import AuditHistory from './AuditHistory';
import AuditTrailSection from './AuditTrailSection';
import { useAuditTrail } from './useAuditTrail';
import { usePermissions } from '../../hooks/usePermissions';
import PermissionGate from '../PermissionGate';
import ResponsiveStepper from '../ResponsiveStepper';
import AuditTrailStepper from '../AuditTrailStepper';

const { Title, Text } = Typography;
const { TextArea } = Input;
const { Option } = Select;
const { TabPane } = Tabs;

const AuditTrailDemo = ({ 
  documentId = 'demo-doc-001',
  documentType = 'demo-document'
}) => {
  const [form] = Form.useForm();
  const [documentData, setDocumentData] = useState({
    title: '‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á',
    description: '‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö Audit Trail',
    amount: 10000,
    status: 'draft'
  });
  const [oldData, setOldData] = useState(documentData);

  // Configuration
  const [showGeographicInfo, setShowGeographicInfo] = useState(true);
  const [showChangeDetails, setShowChangeDetails] = useState(true);
  const [compactMode, setCompactMode] = useState(false);

  // ResponsiveStepper Demo States
  const [currentStep, setCurrentStep] = useState(0);
  const [stepperTheme, setStepperTheme] = useState('default');
  const [stepperDirection, setStepperDirection] = useState('horizontal');
  const [stepperSize, setStepperSize] = useState('default');
  const [showStepperDescription, setShowStepperDescription] = useState(true);
  const [showStepperProgress, setShowStepperProgress] = useState(true);
  const [stepperResponsive, setStepperResponsive] = useState(true);

  // Audit Trail Hook
  const {
    auditTrail,
    statusHistory,
    loading,
    error,
    addAuditEntry,
    addStatusEntry,
    saveWithAuditTrail,
    clearAll,
    canPerformAction,
    canViewAuditTrail
  } = useAuditTrail({
    documentId,
    documentType,
    config: {
      showChangeHistory: true,
      showAuditDetails: true,
      showGeographicInfo: true
    }
  });

  // Permissions
  const { hasPermission, userRole } = usePermissions();

  // Sample steps for different scenarios
  const documentSteps = [
    { 
      title: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£', 
      description: '‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£',
      status: 'completed' 
    },
    { 
      title: '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö', 
      description: '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á',
      status: currentStep >= 1 ? 'completed' : 'pending'
    },
    { 
      title: '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥', 
      description: '‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£',
      status: currentStep >= 2 ? 'completed' : 'pending'
    },
    { 
      title: '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', 
      description: '‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß',
      status: currentStep >= 3 ? 'completed' : 'pending'
    }
  ];

  const serviceSteps = [
    { title: '‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô', description: '‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏∞‡∏ö‡∏ö' },
    { title: '‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£', description: '‡∏ä‡πà‡∏≤‡∏á‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏á‡∏≤‡∏ô' },
    { title: '‡∏ï‡∏£‡∏ß‡∏à‡∏á‡∏≤‡∏ô', description: '‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏ä‡πà‡∏≤‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏á‡∏≤‡∏ô' },
    { title: '‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö', description: '‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤' }
  ];

  // Simulate user info
  const getCurrentUser = () => ({
    uid: 'user-001',
    displayName: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
    name: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
    email: 'test@example.com',
    employeeCode: 'BAS00001',
    department: 'IT'
  });

  // Stepper handlers
  const handleStepClick = (stepIndex) => {
    console.log('Step clicked:', stepIndex);
    if (stepIndex <= currentStep + 1) {
      setCurrentStep(stepIndex);
      
      // Add audit entry for step change
      const currentUser = getCurrentUser();
      addAuditEntry(
        currentUser.uid,
        'step_change',
        currentUser,
        { currentStep },
        { currentStep: stepIndex },
        { documentId, documentType },
        null,
        `‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏õ‡πá‡∏ô: ${documentSteps[stepIndex]?.title}`
      );
    }
  };

  const advanceStep = () => {
    if (currentStep < documentSteps.length - 1) {
      const newStep = currentStep + 1;
      setCurrentStep(newStep);
      
      // Add audit entry for step advancement
      const currentUser = getCurrentUser();
      addAuditEntry(
        currentUser.uid,
        'step_advance',
        currentUser,
        { currentStep },
        { currentStep: newStep },
        { documentId, documentType },
        null,
        `‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô: ${documentSteps[newStep]?.title}`
      );
    }
  };

  const previousStep = () => {
    if (currentStep > 0) {
      const newStep = currentStep - 1;
      setCurrentStep(newStep);
      
      // Add audit entry for step regression
      const currentUser = getCurrentUser();
      addAuditEntry(
        currentUser.uid,
        'step_back',
        currentUser,
        { currentStep },
        { currentStep: newStep },
        { documentId, documentType },
        null,
        `‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô: ${documentSteps[newStep]?.title}`
      );
    }
  };

  const resetSteps = () => {
    setCurrentStep(0);
    
    // Add audit entry for step reset
    const currentUser = getCurrentUser();
    addAuditEntry(
      currentUser.uid,
      'step_reset',
      currentUser,
      { currentStep },
      { currentStep: 0 },
      { documentId, documentType },
      null,
      '‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô'
    );
  };

  // Handle form submission
  const handleSave = async (values) => {
    try {
      const currentUser = getCurrentUser();
      const isEdit = JSON.stringify(documentData) !== JSON.stringify(oldData);
      
      // Update document data
      setOldData(documentData);
      setDocumentData({ ...documentData, ...values });

      // Add audit entry
      addAuditEntry(
        currentUser.uid,
        isEdit ? 'update' : 'create',
        currentUser,
        oldData,
        { ...documentData, ...values },
        { documentId, documentType },
        null,
        `${isEdit ? '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç' : '‡∏™‡∏£‡πâ‡∏≤‡∏á'}‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£: ${values.title}`
      );

      // Add status entry if status changed
      if (values.status && values.status !== documentData.status) {
        addStatusEntry(
          currentUser.uid,
          values.status,
          currentUser,
          `‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô ${values.status}`
        );
      }

      message.success(isEdit ? '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢' : '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
    } catch (err) {
      message.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + err.message);
    }
  };

  // Handle approval
  const handleApprove = (entry) => {
    const currentUser = getCurrentUser();
    
    // Add audit entry for approval
    addAuditEntry(
      currentUser.uid,
      'approve',
      currentUser,
      {},
      {},
      { documentId, documentType },
      null,
      '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£'
    );

    setDocumentData({ ...documentData, status: 'approved' });
    message.success('‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
  };

  // Handle document actions
  const handleAction = (action) => {
    const currentUser = getCurrentUser();
    
    addAuditEntry(
      currentUser.uid,
      action,
      currentUser,
      documentData,
      { ...documentData, status: action === 'delete' ? 'deleted' : action },
      { documentId, documentType },
      null,
      `‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£: ${action}`
    );

    if (action === 'submit') {
      addStatusEntry(
        currentUser.uid,
        'submitted',
        currentUser,
        '‡∏™‡πà‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'
      );
      setDocumentData({ ...documentData, status: 'submitted' });
    }

    message.success(`‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ ${action} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢`);
  };

  return (
    <div className="p-6">
      <Title level={2}>üßæ Audit Trail & ResponsiveStepper Demo with RBAC Integration</Title>
      
      <Tabs defaultActiveKey="1" size="large">
        <TabPane tab="üßæ Audit Trail Demo" key="1">
          {/* Demo Controls */}
          <Card className="mb-6">
            <Title level={4}>‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• Audit Trail</Title>
            <Row gutter={16}>
              <Col span={8}>
                <Space>
                  <Text>‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏π‡∏°‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå:</Text>
                  <Switch 
                    checked={showGeographicInfo} 
                    onChange={setShowGeographicInfo}
                  />
                </Space>
              </Col>
              <Col span={8}>
                <Space>
                  <Text>‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á:</Text>
                  <Switch 
                    checked={showChangeDetails} 
                    onChange={setShowChangeDetails}
                  />
                </Space>
              </Col>
              <Col span={8}>
                <Space>
                  <Text>‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏∞‡∏ó‡∏±‡∏î‡∏£‡∏±‡∏î:</Text>
                  <Switch 
                    checked={compactMode} 
                    onChange={setCompactMode}
                  />
                </Space>
              </Col>
            </Row>
            
            <Divider />
            
            <Space>
              <Text strong>‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</Text>
              <Text>Role: {userRole}</Text>
              <Text>‚Ä¢</Text>
              <Text>Can View Audit: {canViewAuditTrail() ? '‚úÖ' : '‚ùå'}</Text>
              <Text>‚Ä¢</Text>
              <Text>Can Edit: {canPerformAction('update', 'accounting') ? '‚úÖ' : '‚ùå'}</Text>
              <Text>‚Ä¢</Text>
              <Text>Can Approve: {canPerformAction('approve', 'accounting') ? '‚úÖ' : '‚ùå'}</Text>
            </Space>
          </Card>

      <Row gutter={16}>
        {/* Document Form */}
        <Col span={12}>
          <Card title="üìù ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£">
            <Form
              form={form}
              layout="vertical"
              initialValues={documentData}
              onFinish={handleSave}
            >
              <Form.Item
                name="title"
                label="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£"
                rules={[{ required: true, message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£' }]}
              >
                <Input placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£" />
              </Form.Item>

              <Form.Item
                name="description"
                label="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î"
              >
                <TextArea rows={3} placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£" />
              </Form.Item>

              <Form.Item
                name="amount"
                label="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"
                rules={[{ required: true, message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô' }]}
              >
                <Input type="number" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô" />
              </Form.Item>

              {/* Audit Trail Section */}
              <PermissionGate permission="accounting.view">
                <AuditTrailSection
                  canEditEditedBy={hasPermission('accounting.edit')}
                  canEditReviewedBy={hasPermission('accounting.review')}
                  canEditApprovedBy={hasPermission('accounting.approve')}
                />
              </PermissionGate>

              {/* Action Buttons */}
              <div className="mt-6">
                <Space>
                  <PermissionGate permission="accounting.edit">
                    <Button 
                      type="primary" 
                      icon={<SaveOutlined />}
                      htmlType="submit"
                      loading={loading}
                    >
                      ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                    </Button>
                  </PermissionGate>

                  <PermissionGate permission="accounting.edit">
                    <Button 
                      icon={<EditOutlined />}
                      onClick={() => handleAction('submit')}
                      disabled={documentData.status === 'submitted'}
                    >
                      ‡∏™‡πà‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
                    </Button>
                  </PermissionGate>

                  <PermissionGate permission="accounting.approve">
                    <Button 
                      type="primary"
                      icon={<CheckOutlined />}
                      onClick={() => handleAction('approve')}
                      disabled={documentData.status === 'approved'}
                      style={{ backgroundColor: '#52c41a', borderColor: '#52c41a' }}
                    >
                      ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
                    </Button>
                  </PermissionGate>

                  <Button 
                    danger
                    icon={<DeleteOutlined />}
                    onClick={clearAll}
                  >
                    ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Audit
                  </Button>
                </Space>
              </div>
            </Form>
          </Card>
        </Col>

        {/* Audit History */}
        <Col span={12}>
          <Card title="üìä ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö">
            <AuditHistory
              auditTrail={auditTrail}
              statusHistory={statusHistory}
              loading={loading}
              error={error}
              onApprove={handleApprove}
              showGeographicInfo={showGeographicInfo}
              showChangeDetails={showChangeDetails}
              compact={compactMode}
            />
          </Card>
        </Col>
      </Row>

          {/* Current Status */}
          <Card className="mt-6">
            <Title level={4}>üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô</Title>
            <pre style={{ background: '#f5f5f5', padding: '16px', borderRadius: '4px' }}>
              {JSON.stringify(documentData, null, 2)}
            </pre>
          </Card>
        </TabPane>

        <TabPane tab="üìä ResponsiveStepper Demo" key="2">
          {/* Stepper Controls */}
          <Card className="mb-6">
            <Title level={4}>‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• ResponsiveStepper</Title>
            <Row gutter={[16, 16]}>
              <Col span={6}>
                <Text strong>‡∏ò‡∏µ‡∏°:</Text>
                <Select 
                  value={stepperTheme} 
                  onChange={setStepperTheme} 
                  style={{ width: '100%', marginTop: '4px' }}
                >
                  <Option value="default">Default</Option>
                  <Option value="minimal">Minimal</Option>
                  <Option value="modern">Modern</Option>
                </Select>
              </Col>
              <Col span={6}>
                <Text strong>‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á:</Text>
                <Select 
                  value={stepperDirection} 
                  onChange={setStepperDirection} 
                  style={{ width: '100%', marginTop: '4px' }}
                >
                  <Option value="horizontal">‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô</Option>
                  <Option value="vertical">‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á</Option>
                </Select>
              </Col>
              <Col span={6}>
                <Text strong>‡∏Ç‡∏ô‡∏≤‡∏î:</Text>
                <Select 
                  value={stepperSize} 
                  onChange={setStepperSize} 
                  style={{ width: '100%', marginTop: '4px' }}
                >
                  <Option value="default">‡∏õ‡∏Å‡∏ï‡∏¥</Option>
                  <Option value="small">‡πÄ‡∏•‡πá‡∏Å</Option>
                </Select>
              </Col>
              <Col span={6}>
                <Text strong>‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</Text>
                <InputNumber 
                  min={0} 
                  max={documentSteps.length - 1}
                  value={currentStep} 
                  onChange={setCurrentStep} 
                  style={{ width: '100%', marginTop: '4px' }}
                />
              </Col>
            </Row>
            
            <Row gutter={[16, 16]} style={{ marginTop: '16px' }}>
              <Col span={6}>
                <Space direction="vertical">
                  <Text strong>‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:</Text>
                  <Switch checked={showStepperDescription} onChange={setShowStepperDescription} />
                </Space>
              </Col>
              <Col span={6}>
                <Space direction="vertical">
                  <Text strong>‡πÅ‡∏™‡∏î‡∏á Progress Bar:</Text>
                  <Switch checked={showStepperProgress} onChange={setShowStepperProgress} />
                </Space>
              </Col>
              <Col span={6}>
                <Space direction="vertical">
                  <Text strong>Responsive:</Text>
                  <Switch checked={stepperResponsive} onChange={setStepperResponsive} />
                </Space>
              </Col>
              <Col span={6}>
                <Space>
                  <Button onClick={previousStep} disabled={currentStep === 0}>
                    ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
                  </Button>
                  <Button 
                    type="primary" 
                    onClick={advanceStep} 
                    disabled={currentStep === documentSteps.length - 1}
                  >
                    ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
                  </Button>
                  <Button onClick={resetSteps}>‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï</Button>
                </Space>
              </Col>
            </Row>
          </Card>

          {/* Demo 1: Document Process with Audit Integration */}
          <Card title="Demo 1: ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ (‡∏û‡∏£‡πâ‡∏≠‡∏° Audit Trail)" style={{ marginBottom: '24px' }}>
            <ResponsiveStepper
              steps={documentSteps}
              currentStep={currentStep}
              onStepClick={handleStepClick}
              auditInfo={auditTrail?.filter(entry => entry.action.includes('step'))}
              responsive={stepperResponsive}
              showDescription={showStepperDescription}
              showProgress={showStepperProgress}
              theme={stepperTheme}
              direction={stepperDirection}
              size={stepperSize}
            />
          </Card>

          {/* Demo 2: Service Process */}
          <Card title="Demo 2: ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ (‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢)" style={{ marginBottom: '24px' }}>
            <ResponsiveStepper
              steps={serviceSteps}
              currentStep={Math.min(currentStep, serviceSteps.length - 1)}
              responsive={stepperResponsive}
              showDescription={showStepperDescription}
              showProgress={showStepperProgress}
              theme={stepperTheme}
              direction={stepperDirection}
              size={stepperSize}
            />
          </Card>

          {/* Demo 3: Minimal Theme */}
          <Card title="Demo 3: Minimal Theme" style={{ marginBottom: '24px' }}>
            <ResponsiveStepper
              steps={[
                { title: '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô' },
                { title: '‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£' },
                { title: '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô' }
              ]}
              currentStep={1}
              theme="minimal"
              responsive={stepperResponsive}
              showDescription={false}
            />
          </Card>

          {/* Demo 4: Modern Theme */}
          <Card title="Demo 4: Modern Theme" style={{ marginBottom: '24px' }}>
            <ResponsiveStepper
              steps={[
                { title: '‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô', description: '‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô' },
                { title: '‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥', description: '‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡πÅ‡∏ú‡∏ô' },
                { title: '‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô', description: '‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô' },
                { title: '‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á', description: '‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤' }
              ]}
              currentStep={2}
              theme="modern"
              responsive={stepperResponsive}
              showDescription={showStepperDescription}
            />
          </Card>

          {/* Mobile Preview */}
          <Card title="Preview ‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ (Responsive)" style={{ marginBottom: '24px' }}>
            <div style={{ 
              maxWidth: '375px', 
              margin: '0 auto', 
              border: '2px solid #d9d9d9', 
              borderRadius: '12px',
              padding: '16px',
              backgroundColor: '#fafafa'
            }}>
              <ResponsiveStepper
                steps={documentSteps}
                currentStep={currentStep}
                responsive={true}
                showDescription={true}
                showProgress={true}
                theme="default"
              />
            </div>
          </Card>

          {/* Usage Guide */}
          <Card title="‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ResponsiveStepper">
            <pre style={{ 
              backgroundColor: '#f6f8fa', 
              padding: '16px', 
              borderRadius: '6px', 
              overflow: 'auto' 
            }}>
{`import { ResponsiveStepper } from 'components';

const steps = [
  { 
    title: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£', 
    description: '‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô' 
  },
  { 
    title: '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö', 
    description: '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á' 
  },
  { 
    title: '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥', 
    description: '‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£' 
  }
];

<ResponsiveStepper
  steps={steps}
  currentStep={1}
  onStepClick={(stepIndex) => console.log(stepIndex)}
  responsive={true}
  theme="default"
  showDescription={true}
  showProgress={true}
  auditInfo={auditTrail}
/>
`}
            </pre>
          </Card>
        </TabPane>

        <TabPane tab="üì¶ Audit Trail Stepper Demo" key="3">
                      {/* Audit Trail Stepper Demo */}
            <Card title="AuditTrailStepper - ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏¢ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÄ‡∏ï‡πá‡∏°" style={{ marginBottom: '24px' }}>
              <Typography.Paragraph>
                <Text strong>AuditTrailStepper</Text> ‡πÉ‡∏ä‡πâ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏¢‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏Ñ‡∏£‡∏ö‡∏Ñ‡∏£‡∏±‡∏ô 
                ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏¢‡∏≤‡∏¢‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏î‡πâ
              </Typography.Paragraph>
            
            <AuditTrailStepper
              steps={documentSteps}
              currentStep={currentStep}
              onStepClick={handleStepClick}
              auditInfo={auditTrail?.filter(entry => entry.action.includes('step'))}
              status="process"
              showFullByDefault={false}
              compactHeight="56px"
            />
          </Card>

          {/* Show Full by Default */}
          <Card title="‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏°‡πÇ‡∏î‡∏¢‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô" style={{ marginBottom: '24px' }}>
            <Typography.Paragraph>
              <Text strong>showFullByDefault={`{true}`}</Text> - ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏°‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
            </Typography.Paragraph>
            
            <AuditTrailStepper
              steps={serviceSteps}
              currentStep={Math.min(currentStep, serviceSteps.length - 1)}
              onStepClick={handleStepClick}
              status="process"
              showFullByDefault={true}
              compactHeight="56px"
            />
          </Card>

          {/* Different Heights */}
          <Card title="‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô" style={{ marginBottom: '24px' }}>
            <Typography.Paragraph>
              <Text strong>compactHeight</Text> - ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏∞‡∏ó‡∏±‡∏î‡∏£‡∏±‡∏î‡πÑ‡∏î‡πâ
            </Typography.Paragraph>
            
            <Row gutter={[16, 16]}>
              <Col span={8}>
                <Card size="small" title="‡∏™‡∏π‡∏á 48px">
                  <AuditTrailStepper
                    steps={[
                      { title: '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô' },
                      { title: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£' },
                      { title: '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô' }
                    ]}
                    currentStep={1}
                    compactHeight="48px"
                  />
                </Card>
              </Col>
              <Col span={8}>
                <Card size="small" title="‡∏™‡∏π‡∏á 64px">
                  <AuditTrailStepper
                    steps={[
                      { title: '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô' },
                      { title: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£' },
                      { title: '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô' }
                    ]}
                    currentStep={1}
                    compactHeight="64px"
                  />
                </Card>
              </Col>
              <Col span={8}>
                <Card size="small" title="‡∏™‡∏π‡∏á 72px">
                  <AuditTrailStepper
                    steps={[
                      { title: '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô' },
                      { title: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£' },
                      { title: '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô' }
                    ]}
                    currentStep={1}
                    compactHeight="72px"
                  />
                </Card>
              </Col>
            </Row>
          </Card>

          {/* Usage in Real Scenario */}
          <Card title="‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö" style={{ marginBottom: '24px' }}>
            <Typography.Paragraph>
              ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô LayoutWithRBAC
            </Typography.Paragraph>
            
            <div style={{ 
              background: '#f8f9fa', 
              padding: '16px', 
              borderRadius: '6px',
              border: '1px solid #e9ecef' 
            }}>
              <AuditTrailStepper
                steps={[
                  { title: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö', description: '‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô' },
                  { title: '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö', description: '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á' },
                  { title: '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥', description: '‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£' },
                  { title: '‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô', description: '‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô' },
                  { title: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ', description: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ' }
                ]}
                currentStep={currentStep}
                onStepClick={handleStepClick}
                auditInfo={auditTrail?.filter(entry => entry.action.includes('step'))}
                status="process"
              />
            </div>
          </Card>

          {/* Integration Code Example */}
          <Card title="‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô">
            <pre style={{ 
              backgroundColor: '#f6f8fa', 
              padding: '16px', 
              borderRadius: '6px', 
              overflow: 'auto' 
            }}>
{`import { AuditTrailStepper } from 'components';

// ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô - ‡∏Å‡∏∞‡∏ó‡∏±‡∏î‡∏£‡∏±‡∏î
<AuditTrailStepper
  steps={steps}
  currentStep={currentStep}
  onStepClick={handleStepClick}
  auditInfo={auditTrail}
  showFullByDefault={false}
  compactHeight="56px"
/>

// ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏°‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
<AuditTrailStepper
  steps={steps}
  currentStep={currentStep}
  onStepClick={handleStepClick}
  auditInfo={auditTrail}
  showFullByDefault={true}
/>

// ‡πÉ‡∏ô LayoutWithRBAC
<LayoutWithRBAC
  showStepper={true}
  steps={steps}
  currentStep={currentStep}
  onStepClick={handleStepClick}
>
  {/* ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ */}
</LayoutWithRBAC>
`}
            </pre>
          </Card>

          {/* Benefits */}
          <Card title="‡∏Ç‡πâ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á AuditTrailStepper">
            <Row gutter={[16, 16]}>
              <Col span={12}>
                <Typography.Title level={5}>üéØ ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà</Typography.Title>
                <ul>
                  <li>‡πÉ‡∏ä‡πâ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á 56px (‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô)</li>
                  <li>‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡πà‡∏ô</li>
                  <li>‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠</li>
                </ul>
              </Col>
              <Col span={12}>
                <Typography.Title level={5}>‚ö° ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏Ñ‡∏£‡∏ö‡∏Ñ‡∏£‡∏±‡∏ô</Typography.Title>
                <ul>
                  <li>‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤</li>
                  <li>‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏î‡πâ</li>
                  <li>‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Audit Trail</li>
                </ul>
              </Col>
            </Row>
            <Row gutter={[16, 16]} style={{ marginTop: '16px' }}>
              <Col span={12}>
                <Typography.Title level={5}>üîß ‡∏á‡πà‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</Typography.Title>
                <ul>
                  <li>‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å ResponsiveStepper ‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢</li>
                  <li>API ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô</li>
                  <li>Integration ‡∏á‡πà‡∏≤‡∏¢</li>
                </ul>
              </Col>
              <Col span={12}>
                <Typography.Title level={5}>üì± Mobile-Friendly</Typography.Title>
                <ul>
                  <li>‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠</li>
                  <li>‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏¥‡πâ‡∏ß</li>
                  <li>‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏î‡∏µ‡∏ó‡∏∏‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</li>
                </ul>
              </Col>
            </Row>
          </Card>
        </TabPane>
      </Tabs>
    </div>
  );
};

AuditTrailDemo.propTypes = {
  documentId: PropTypes.string,
  documentType: PropTypes.string
};

export default AuditTrailDemo; 