import React, { useState, useEffect } from 'react';
import PropTypes from 'prop-types';
import {
  Button,
  Tooltip,
  Drawer,
  Typography,
  Steps,
  Space,
  Tag,
  Divider,
} from 'antd';
import {
  QuestionCircleOutlined,
  BookOutlined,
  UserOutlined,
  FormOutlined,
  SafetyOutlined,
  HomeOutlined,
  CheckCircleOutlined,
  MailOutlined,
  InfoCircleOutlined,
} from '@ant-design/icons';
import './SimpleHelpButton.css';

const { Title, Text, Paragraph } = Typography;
const { Step } = Steps;

/**
 * Simple Help Button with Elegant Drawer
 */
const SimpleHelpButton = ({ screenType = 'general', autoShow = false }) => {
  const [currentStep, setCurrentStep] = useState(0);
  const [drawerVisible, setDrawerVisible] = useState(false);
  const [isFirstTime, setIsFirstTime] = useState(false);

  // Auto-show for first-time users
  useEffect(() => {
    const hasSeenHelp = localStorage.getItem(`help-seen-${screenType}`);
    const isFirstTimeUser = !hasSeenHelp;

    setIsFirstTime(isFirstTimeUser);

    if (autoShow && isFirstTimeUser) {
      setDrawerVisible(true);
    }
  }, [screenType, autoShow]);

  const handleClose = () => {
    setDrawerVisible(false);
    localStorage.setItem(`help-seen-${screenType}`, 'true');
    setIsFirstTime(false);
  };

  // Get help content based on screen type
  const getHelpContent = () => {
    switch (screenType) {
      case 'signup':
        return {
          title: 'ЁЯУЭ р╕зр╕┤р╕Шр╕╡р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б',
          subtitle: 'р╕Вр╕▒р╣Йр╕Щр╕Хр╕нр╕Щр╕Зр╣Ир╕▓р╕вр╣Ж р╣Гр╕Щр╕Бр╕▓р╕гр╣Ар╕Вр╣Йр╕▓р╕гр╣Ир╕зр╕б KBN',
          steps: [
            {
              title: 'р╣Ар╕ер╕╖р╕нр╕Бр╕Ыр╕гр╕░р╣Ар╕ар╕Чр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й',
              description: 'р╣Ар╕ер╕╖р╕нр╕Бр╕зр╣Ир╕▓р╕Др╕╕р╕Ур╣Ар╕Ыр╣Зр╕Щр╕Юр╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╣Гр╕лр╕бр╣И р╕лр╕гр╕╖р╕нр╕Юр╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╣Ар╕Фр╕┤р╕б',
              icon: <UserOutlined />,
              details: [
                'ЁЯЯв р╕Юр╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╣Гр╕лр╕бр╣И: р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Др╕Щр╕Чр╕╡р╣Ир╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Ар╕Др╕вр╣Гр╕Кр╣Йр╕гр╕░р╕Ър╕Ъ KBN',
                'тЪл р╕Юр╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╣Ар╕Фр╕┤р╕б: р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Др╕Щр╕Чр╕╡р╣Ир╣Ар╕Др╕вр╣Гр╕Кр╣Йр╕гр╕░р╕Ър╕Ър╣Бр╕ер╣Йр╕з',
              ],
            },
            {
              title: 'р╕Бр╕гр╕нр╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╣Ир╕зр╕Щр╕Хр╕▒р╕з',
              description: 'р╣Гр╕кр╣Ир╕Кр╕╖р╣Ир╕н-р╕Щр╕▓р╕бр╕кр╕Бр╕╕р╕е р╕нр╕╡р╣Ар╕бр╕е р╣Бр╕ер╕░р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ',
              icon: <FormOutlined />,
              details: [
                'ЁЯЯв р╣Гр╕Кр╣Йр╕нр╕╡р╣Ар╕бр╕ер╕Чр╕╡р╣Ир╣Ар╕Кр╣Зр╕Др╣Др╕Фр╣Йр╕Чр╕╕р╕Бр╕зр╕▒р╕Щ',
                'ЁЯФР р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕Др╕зр╕гр╕бр╕╡р╕нр╕вр╣Ир╕▓р╕Зр╕Щр╣Йр╕нр╕в 6 р╕Хр╕▒р╕зр╕нр╕▒р╕Бр╕йр╕г',
                'ЁЯСд р╣Гр╕кр╣Ир╕Кр╕╖р╣Ир╕нр╕Ир╕гр╕┤р╕Зр╕Хр╕▓р╕бр╕Ър╕▒р╕Хр╕гр╕Ыр╕гр╕░р╕Кр╕▓р╕Кр╕Щ',
              ],
            },
            {
              title: 'р╣Ар╕ер╕╖р╕нр╕Бр╕кр╕▓р╕Вр╕▓р╣Бр╕ер╕░р╣Бр╕Ьр╕Щр╕Б',
              description: 'р╕Ър╕нр╕Бр╕гр╕░р╕Ър╕Ър╕зр╣Ир╕▓р╕Др╕╕р╕Ур╕Чр╕│р╕Зр╕▓р╕Щр╕Чр╕╡р╣Ир╕кр╕▓р╕Вр╕▓р╣Др╕лр╕Щ р╣Бр╕Ьр╕Щр╕Бр╕нр╕░р╣Др╕г',
              icon: <HomeOutlined />,
              details: [
                'ЁЯПв р╣Ар╕ер╕╖р╕нр╕Бр╕Ир╕▒р╕Зр╕лр╕зр╕▒р╕Фр╕Чр╕╡р╣Ир╕Чр╕│р╕Зр╕▓р╕Щ',
                'ЁЯПк р╣Ар╕ер╕╖р╕нр╕Бр╕кр╕▓р╕Вр╕▓р╕Чр╕╡р╣Ир╕Чр╕│р╕Зр╕▓р╕Щ',
                'ЁЯСе р╣Ар╕ер╕╖р╕нр╕Бр╣Бр╕Ьр╕Щр╕Бр╕Чр╕╡р╣Ир╕кр╕▒р╕Зр╕Бр╕▒р╕Ф (р╕Вр╕▓р╕в, р╕Ър╕гр╕┤р╕Бр╕▓р╕г, р╕Ър╕▒р╕Нр╕Кр╕╡, р╕пр╕ер╕п)',
              ],
            },
            {
              title: 'р╕гр╕нр╕Бр╕▓р╕гр╕нр╕Щр╕╕р╕бр╕▒р╕Хр╕┤',
              description: 'р╕лр╕▒р╕зр╕лр╕Щр╣Йр╕▓р╕Ир╕░р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Бр╕ер╕░р╕нр╕Щр╕╕р╕бр╕▒р╕Хр╕┤р╣Гр╕лр╣Йр╣Ар╕Вр╣Йр╕▓р╣Гр╕Кр╣Йр╕гр╕░р╕Ър╕Ъ',
              icon: <CheckCircleOutlined />,
              details: [
                'тП│ р╕гр╕нр╕Ыр╕гр╕░р╕бр╕▓р╕У 1-2 р╕зр╕▒р╕Щр╕Чр╕│р╕Бр╕▓р╕г',
                'ЁЯУ▒ р╕Ир╕░р╣Др╕Фр╣Йр╕гр╕▒р╕Ър╣Бр╕Ир╣Йр╕Зр╣Ар╕Хр╕╖р╕нр╕Щр╕Чр╕▓р╕Зр╕нр╕╡р╣Ар╕бр╕ер╣Ар╕бр╕╖р╣Ир╕нр╕нр╕Щр╕╕р╕бр╕▒р╕Хр╕┤р╣Бр╕ер╣Йр╕з',
                'ЁЯОЙ р╕Юр╕нр╣Др╕Фр╣Йр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕нр╕Щр╕╕р╕бр╕▒р╕Хр╕┤ р╕Бр╣Зр╣Ар╕Вр╣Йр╕▓р╣Гр╕Кр╣Йр╕гр╕░р╕Ър╕Ър╣Др╕Фр╣Йр╣Ар╕ер╕в!',
              ],
            },
          ],
        };

      case 'login':
        return {
          title: 'ЁЯФР р╕зр╕┤р╕Шр╕╡р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ',
          subtitle: 'р╣Ар╕Вр╣Йр╕▓р╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ KBN р╕нр╕вр╣Ир╕▓р╕Зр╕Зр╣Ир╕▓р╕вр╕Фр╕▓р╕в',
          steps: [
            {
              title: 'р╣Гр╕кр╣Ир╕нр╕╡р╣Ар╕бр╕ер╣Бр╕ер╕░р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ',
              description: 'р╣Гр╕Кр╣Йр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕Фр╕╡р╕вр╕зр╕Бр╕▒р╕Ър╕Хр╕нр╕Щр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б',
              icon: <FormOutlined />,
              details: [
                'ЁЯУз р╣Гр╕кр╣Ир╕нр╕╡р╣Ар╕бр╕ер╕Чр╕╡р╣Ир╣Гр╕Кр╣Йр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б',
                'ЁЯФР р╣Гр╕кр╣Ир╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕Чр╕╡р╣Ир╕Хр╕▒р╣Йр╕Зр╣Др╕зр╣Й',
                'ЁЯСБя╕П р╕Бр╕Фр╕Ыр╕╕р╣Ир╕бр╕Хр╕▓р╣Ар╕Юр╕╖р╣Ир╕нр╕Фр╕╣р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Др╕Фр╣Й',
              ],
            },
            {
              title: 'р╕Бр╕Фр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ',
              description: 'р╕гр╕░р╕Ър╕Ър╕Ир╕░р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Бр╕ер╕░р╕Юр╕▓р╣Ар╕Вр╣Йр╕▓р╣Др╕Ыр╣Гр╕Щр╕гр╕░р╕Ър╕Ъ',
              icon: <CheckCircleOutlined />,
              details: [
                'тЬЕ р╕Цр╣Йр╕▓р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З р╕Ир╕░р╣Ар╕Вр╣Йр╕▓р╕гр╕░р╕Ър╕Ър╣Др╕Фр╣Йр╕Чр╕▒р╕Щр╕Чр╕╡',
                'тЭМ р╕Цр╣Йр╕▓р╕Ьр╕┤р╕Ф р╕гр╕░р╕Ър╕Ър╕Ир╕░р╣Бр╕Ир╣Йр╕Зр╣Гр╕лр╣Йр╣Бр╕Бр╣Йр╣Др╕В',
                'ЁЯФД р╕ер╕╖р╕бр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ? р╕Бр╕Фр╕ер╕┤р╕Зр╕Бр╣М "р╕ер╕╖р╕бр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ" р╣Др╕Фр╣Йр╣Ар╕ер╕в',
              ],
            },
          ],
        };

      case 'forgot-password':
        return {
          title: 'ЁЯФД р╕зр╕┤р╕Шр╕╡р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ',
          subtitle: 'р╕Бр╕╣р╣Йр╕Др╕╖р╕Щр╕Бр╕▓р╕гр╣Ар╕Вр╣Йр╕▓р╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ KBN',
          steps: [
            {
              title: 'р╣Гр╕кр╣Ир╕нр╕╡р╣Ар╕бр╕ер╕Чр╕╡р╣Ир╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╣Др╕зр╣Й',
              description: 'р╣Гр╕кр╣Ир╕нр╕╡р╣Ар╕бр╕ер╣Ар╕Фр╕╡р╕вр╕зр╕Бр╕▒р╕Ър╕Чр╕╡р╣Ир╣Гр╕Кр╣Йр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б',
              icon: <MailOutlined />,
              details: [
                'ЁЯУз р╣Гр╕кр╣Ир╕нр╕╡р╣Ар╕бр╕ер╕Чр╕╡р╣Ир╣Ар╕Др╕вр╣Гр╕Кр╣Йр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б',
                'тЬЕ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Гр╕лр╣Йр╣Бр╕Щр╣Ир╣Гр╕Ир╕зр╣Ир╕▓р╕кр╕░р╕Бр╕Фр╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З',
                'ЁЯУ▒ р╣Ар╕Хр╕гр╕╡р╕вр╕бр╣Ар╕Кр╣Зр╕Др╕нр╕╡р╣Ар╕бр╕ер╕лр╕ер╕▒р╕Зр╕Бр╕Фр╕кр╣Ир╕З',
              ],
            },
            {
              title: 'р╣Ар╕Кр╣Зр╕Др╕нр╕╡р╣Ар╕бр╕ер╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ',
              description: 'р╕гр╕░р╕Ър╕Ър╕Ир╕░р╕кр╣Ир╕Зр╕ер╕┤р╕Зр╕Бр╣Мр╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╣Др╕Ыр╕вр╕▒р╕Зр╕нр╕╡р╣Ар╕бр╕ер╕Вр╕нр╕Зр╕Др╕╕р╕У',
              icon: <CheckCircleOutlined />,
              details: [
                'ЁЯУз р╣Ар╕Кр╣Зр╕Др╕Бр╕ер╣Ир╕нр╕Зр╕Вр╕▓р╣Ар╕Вр╣Йр╕▓р╣Гр╕Щр╕нр╕╡р╣Ар╕бр╕е',
                'ЁЯУБ р╕Цр╣Йр╕▓р╣Др╕бр╣Ир╣Ар╕Ир╕н р╣Гр╕лр╣Йр╣Ар╕Кр╣Зр╕Др╕Бр╕ер╣Ир╕нр╕З Spam',
                'ЁЯФЧ р╕Бр╕Фр╕ер╕┤р╕Зр╕Бр╣Мр╣Гр╕Щр╕нр╕╡р╣Ар╕бр╕ер╣Ар╕Юр╕╖р╣Ир╕нр╕Хр╕▒р╣Йр╕Зр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Гр╕лр╕бр╣И',
              ],
            },
          ],
        };

      default:
        return {
          title: 'ЁЯУЦ р╕Др╕╣р╣Ир╕бр╕╖р╕нр╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ',
          subtitle: 'р╕зр╕┤р╕Шр╕╡р╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕гр╕░р╕Ър╕Ъ KBN',
          steps: [
            {
              title: 'р╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕Чр╕▒р╣Ир╕зр╣Др╕Ы',
              description: 'р╕лр╕ер╕▒р╕Бр╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕гр╕░р╕Ър╕Ъ KBN',
              icon: <InfoCircleOutlined />,
              details: [
                'ЁЯЦ▒я╕П р╕Бр╕Фр╕Ыр╕╕р╣Ир╕бр╣Ар╕Юр╕╖р╣Ир╕нр╕Чр╕│р╕Зр╕▓р╕Щ',
                'ЁЯУЭ р╕Бр╕гр╕нр╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Гр╕Щр╕Кр╣Ир╕нр╕Зр╕Чр╕╡р╣Ир╕Бр╕│р╕лр╕Щр╕Ф',
                'ЁЯТ╛ р╕Бр╕Ф "р╕Ър╕▒р╕Щр╕Чр╕╢р╕Б" р╣Ар╕бр╕╖р╣Ир╕нр╣Ар╕кр╕гр╣Зр╕Ир╣Бр╕ер╣Йр╕з',
              ],
            },
          ],
        };
    }
  };

  const helpContent = getHelpContent();

  return (
    <>
      {/* Elegant Floating Help Button */}
      <Tooltip title='р╕Др╕╣р╣Ир╕бр╕╖р╕нр╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ' placement='left'>
        <Button
          type='primary'
          shape='circle'
          icon={<QuestionCircleOutlined />}
          onClick={() => setDrawerVisible(true)}
          className={`simple-help-button ${isFirstTime ? 'first-time' : ''}`}
          style={{
            position: 'fixed',
            right: 20,
            bottom: 20,
            width: 60,
            height: 60,
            backgroundColor: 'rgba(82, 196, 26, 0.7)',
            borderColor: 'rgba(82, 196, 26, 0.8)',
            color: 'white',
            fontSize: '22px',
            zIndex: 1010, // Fixed z-index to respect navigation hierarchy
            boxShadow: '0 4px 20px rgba(82, 196, 26, 0.3)',
            border: '2px solid rgba(255, 255, 255, 0.2)',
            backdropFilter: 'blur(10px)',
            transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',
            transform: 'scale(1)',
          }}
          onMouseEnter={(e) => {
            e.target.style.backgroundColor = 'rgba(82, 196, 26, 0.95)';
            e.target.style.boxShadow = '0 8px 30px rgba(82, 196, 26, 0.6)';
            e.target.style.transform = 'scale(1.1)';
            e.target.style.borderColor = 'rgba(255, 255, 255, 0.4)';
          }}
          onMouseLeave={(e) => {
            e.target.style.backgroundColor = 'rgba(82, 196, 26, 0.7)';
            e.target.style.boxShadow = '0 4px 20px rgba(82, 196, 26, 0.3)';
            e.target.style.transform = 'scale(1)';
            e.target.style.borderColor = 'rgba(255, 255, 255, 0.2)';
          }}
        />
      </Tooltip>

      {/* Elegant Drawer - Slides from Right - NO BLOCKING MASK */}
      <Drawer
        title={
          <Space>
            <BookOutlined style={{ color: '#52c41a' }} />
            <span>{helpContent.title}</span>
          </Space>
        }
        placement='right'
        width={window.innerWidth <= 768 ? '100vw' : 480}
        visible={drawerVisible}
        onClose={handleClose}
        extra={
          <Button type='primary' onClick={handleClose}>
            р╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╣Бр╕ер╣Йр╕з
          </Button>
        }
        styles={{
          body: {
            padding: '24px',
            background: 'linear-gradient(135deg, #f6ffed 0%, #fff 100%)',
          },
          header: {
            borderBottom: '1px solid #d9f7be',
            background: 'linear-gradient(135deg, #f6ffed 0%, #fff 50%)',
          },
        }}
        mask={false}
        maskClosable={false}
        keyboard={true}
        destroyOnClose={false}
        zIndex={1025}
        maskStyle={{
          backgroundColor: 'transparent',
          pointerEvents: 'none', // тЬЕ CRITICAL: This allows clicking through the mask!
        }}
        bodyStyle={{
          pointerEvents: 'auto', // тЬЕ But drawer content is still interactive
        }}
      >
        <Space direction='vertical' size='large' style={{ width: '100%' }}>
          {/* Header */}
          <div
            style={{
              padding: '16px 20px',
              backgroundColor: '#f6ffed',
              border: '1px solid #b7eb8f',
              borderRadius: '12px',
              boxShadow: '0 2px 8px rgba(82, 196, 26, 0.1)',
            }}
          >
            <Text
              type='secondary'
              style={{ fontSize: '16px', lineHeight: '1.6' }}
            >
              {helpContent.subtitle}
            </Text>
          </div>

          {/* Interactive Steps */}
          <Steps
            direction='vertical'
            current={currentStep}
            onChange={setCurrentStep}
            size='small'
            style={{
              background: '#ffffff',
              padding: '20px',
              borderRadius: '12px',
              border: '1px solid #f0f0f0',
              boxShadow: '0 2px 8px rgba(0, 0, 0, 0.06)',
            }}
          >
            {helpContent.steps.map((step, index) => (
              <Step
                key={index}
                title={
                  <Space>
                    {step.icon}
                    <span style={{ fontSize: '16px', fontWeight: '600' }}>
                      {step.title}
                    </span>
                  </Space>
                }
                description={
                  <div style={{ marginTop: 12 }}>
                    <Paragraph
                      style={{
                        marginBottom: 16,
                        fontSize: '14px',
                        color: '#595959',
                        lineHeight: '1.6',
                      }}
                    >
                      {step.description}
                    </Paragraph>

                    {/* Detailed Instructions */}
                    <Space
                      direction='vertical'
                      size='small'
                      style={{ width: '100%' }}
                    >
                      {step.details.map((detail, detailIndex) => (
                        <div
                          key={detailIndex}
                          style={{
                            padding: '12px 16px',
                            backgroundColor: '#fafafa',
                            borderRadius: '8px',
                            fontSize: '13px',
                            lineHeight: '1.5',
                            border: '1px solid #f0f0f0',
                            transition: 'all 0.2s ease',
                            cursor: 'default',
                          }}
                          onMouseEnter={(e) => {
                            e.target.style.backgroundColor = '#f6ffed';
                            e.target.style.borderColor = '#d9f7be';
                          }}
                          onMouseLeave={(e) => {
                            e.target.style.backgroundColor = '#fafafa';
                            e.target.style.borderColor = '#f0f0f0';
                          }}
                        >
                          {detail}
                        </div>
                      ))}
                    </Space>
                  </div>
                }
              />
            ))}
          </Steps>

          <Divider style={{ margin: '24px 0' }} />

          {/* Pro Tips Section */}
          <div
            style={{
              padding: '20px',
              backgroundColor: '#f0f8ff',
              border: '1px solid #91d5ff',
              borderRadius: '12px',
              boxShadow: '0 2px 8px rgba(24, 144, 255, 0.1)',
            }}
          >
            <Space direction='vertical' size='medium' style={{ width: '100%' }}>
              <Text
                strong
                style={{
                  color: '#1890ff',
                  fontSize: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                <InfoCircleOutlined /> р╣Ар╕Др╕ер╣Зр╕Фр╕ер╕▒р╕Ър╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ
              </Text>

              <Space
                direction='vertical'
                size='small'
                style={{ width: '100%' }}
              >
                <Text style={{ fontSize: '14px', lineHeight: '1.6' }}>
                  ЁЯТб <strong>р╕Хр╕┤р╕Фр╕Ыр╕▒р╕Нр╕лр╕▓?</strong> р╕Бр╕Фр╕Ыр╕╕р╣Ир╕бр╕Кр╣Ир╕зр╕вр╣Ар╕лр╕ер╕╖р╕н (?) р╣Др╕Фр╣Йр╕Чр╕╕р╕Бр╕лр╕Щр╣Йр╕▓
                </Text>
                <Text style={{ fontSize: '14px', lineHeight: '1.6' }}>
                  ЁЯУЮ <strong>р╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕Др╕зр╕▓р╕бр╕Кр╣Ир╕зр╕вр╣Ар╕лр╕ер╕╖р╕н?</strong> р╕Хр╕┤р╕Фр╕Хр╣Ир╕н IT Support
                </Text>
                <Text style={{ fontSize: '14px', lineHeight: '1.6' }}>
                  ЁЯОп <strong>р╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕Др╕гр╕▒р╣Йр╕Зр╣Бр╕гр╕Б?</strong> р╕ер╕нр╕Зр╕Чр╕│р╕Хр╕▓р╕бр╕Вр╕▒р╣Йр╕Щр╕Хр╕нр╕Щр╕Чр╕╡р╕ер╕░р╕Вр╕▒р╣Йр╕Щ
                </Text>
              </Space>
            </Space>
          </div>

          {/* Status Tags */}
          <div style={{ textAlign: 'center', paddingTop: '12px' }}>
            <Space wrap size='middle'>
              <Tag
                color='green'
                style={{ padding: '4px 12px', borderRadius: '20px' }}
              >
                р╣Гр╕Кр╣Йр╕Зр╣Ир╕▓р╕в
              </Tag>
              <Tag
                color='blue'
                style={{ padding: '4px 12px', borderRadius: '20px' }}
              >
                р╕Ыр╕ер╕нр╕Фр╕ар╕▒р╕в
              </Tag>
              <Tag
                color='orange'
                style={{ padding: '4px 12px', borderRadius: '20px' }}
              >
                р╕гр╕зр╕Фр╣Ар╕гр╣Зр╕з
              </Tag>
            </Space>
          </div>
        </Space>
      </Drawer>
    </>
  );
};

SimpleHelpButton.propTypes = {
  screenType: PropTypes.oneOf([
    'general',
    'signup',
    'login',
    'forgot-password',
  ]),
  autoShow: PropTypes.bool,
};

SimpleHelpButton.defaultProps = {
  screenType: 'general',
  autoShow: false,
};

export default SimpleHelpButton;
